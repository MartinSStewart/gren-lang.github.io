{"is404":false,"staticData":{"364408558":"{\"parsedFrontmatter\":{\"title\":\"Gren 0.1.0 is released\",\"published\":\"2022-05-30\"},\"withoutFrontmatter\":\"\\nToday marks the first release of Gren, a programming language that helps you write simple and correct software.\\n\\nGren aims to be a small language that is easy to learn, and easy to understand. It wants to help you write correct software by being your assistant, pointing out likely mistakes as you write code. Finally, it tries to be available wherever you need it to be, so that you can use it to write CLI tools, backend- or even frontend applications.\\n\\nThere already exist a language that is close to matching this description: [Elm](https://elm-lang.org). What Elm lacks is better support for Web API's, and official support for running outside the browser.\\n\\nWhile we could spend considerable time and effort in creating a language which would look very similar to Elm, we've instead decided to fork the compiler and core packages, and use that as the basis of Gren.\\n\\n### Differences from Elm\\n\\nIf you already know Elm, then you also know Gren. Even the core packages are similar. That said, there are some differences:\\n\\n* A git-based package manager. It's slower, but has access to any github repo that you have, even private ones.\\n* Extended support for pattern matching on records.\\n* The default sequential data structure is an immutable array, not a linked list.\\n* No tuples.\\n* No automatic constructors for type aliased records.\\n* No GLSL syntax.\\n* No reactor.\\n\\nIf you have no experience with Elm, you can read more about the language in our official [guide](/learn). If you'd like to try it out, you can find instructions on getting started [here](/install).\\n\\nVersion 0.1.0 is considered to be an alpha release. While you can write production quality software with it today, there are likely bugs in the compiler and core packages, and breaking changes are planned for the next release.\\n\\nIf you like what you see, consider joining the [community](/community). We can use all the help we can get.\\n\\n### Looking forward\\n\\nGren follows a six-month release cadence. The next release will be v0.2.0 and be made available in December.\\n\\nThe plan is to add support for more Web API's and basic support for applications running on the NodeJS runtime. In addition, the package manager will become more efficient and reliable.\\n\\n### Thank you, contributors\\n\\nThis release of Gren was made possible by people who've written new code, ported packages from Elm and provided valuable feedback on [Zulip](https://gren.zulipchat.com). Those people are, in alphabetic order:\\n\\n* Aaron VonderHaar\\n* Allan Clark\\n* Dimitri B.\\n* Gabriella Sartori\\n* Gaute Berge\\n* Harry Sarson\\n* Jeroen Engels\\n* Joaquin\\n* Julian Antonielli\\n* Lue\\n* Mario Rogic\\n* Oliver Sch√∂ning\\n* Ragnhild Aalvik\\n* Robin Heggelund Hansen\\n\\nThank you!\\n\"}","628379327":"[\"articles/220530_first_release.md\",\"articles/220822_documentation_as_a_first_class_citizen.md\"]","2885376689":"{\"parsedFrontmatter\":{\"title\":\"Documentation as a first class citizen\",\"published\":\"2022-08-22\"},\"withoutFrontmatter\":\"\\nA crucial aspect of any programming language, is how easy it is to discover and learn new functionality. One of the most common questions asked since [Gren's first release in june](/news/220530_first_release) is \\\"what can I do with Gren?\\\" and \\\"where can I see what's in the core package? I don't have to read the code, do I?\\\".\\n\\nSearching through github and reading source code is far from the easiest way to discover and learn the finer details of a language, so today we're proud to announce the availability of [packages.gren-lang.org](https://packages.gren-lang.org). Here you can learn the documentation of Gren's core packages, and discover third-party packages as they arrive.\\n\\n## Discoverability\\n\\nThe packaging site provides full-text search to allow people to find a package by author, package name and keywords in the package summary. In addition, all recently updated packages are listed on the front page.\\n\\nIf you're a member of our [Zulip](https://gren.zulipchat.com), new package versions are posted to the `#packages` topic, so that you can discover new packages as they arrive.\\n\\n## Previewing documentation\\n\\nWhen you install the package site with [npm](https://www.npmjs.com/package/gren-packages) (`npm install -g gren-packages`), you get access to a binary called `gren-doc-preview` which will generate documentation for the package in your current directory, and host a local copy of the packaging site to display it. This let's you see exactly how the documentation will look when imported into the main packaging site, which helps you perfect your documentation with minimal effort.\\n\\n## Easy to self-host\\n\\nThe packaging site is easy to self-host. It runs on Node 16 and uses SQLite as its database. You can run it on your own machine in order to have access to documentation offline, or you can host it on a server to host the documentation for your private packages.\\n\\nJust like the Gren compiler, the packages site uses your local install of Git to retrieve packages from Github. As long as your git client has access to a Gren repo, the packages site can import it as well.\\n\\n## Future enhancements\\n\\nToday marks the first release, but it certaintly won't be the last. Several new features are planned for the future, like being able to mirror another package server, extensive caching and recursive imports of the dependencies of a package.\\n\\nWe believe that this new packaging site will enable new developers to discover new packages and learn how those packages work.\\n\\nAs always, if you've got some idea on how to improve it, we hope to discuss it further on our [Zulip](https://gren.zulipchat.com). See you there?\\n\"}"},"path":"news/220530_first_release"}